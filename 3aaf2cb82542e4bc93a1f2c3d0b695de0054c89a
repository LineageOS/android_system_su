{
  "comments": [
    {
      "key": {
        "uuid": "AAAARX///l0\u003d",
        "filename": "activity.cpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 2975
      },
      "writtenOn": "2012-03-17T21:42:12Z",
      "side": 1,
      "message": "remove unnecessary include",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///lw\u003d",
        "filename": "activity.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 2975
      },
      "writtenOn": "2012-03-17T21:42:12Z",
      "side": 1,
      "message": "check props return value before calling get_property",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///lU\u003d",
        "filename": "su.c",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 2975
      },
      "writtenOn": "2012-03-17T21:47:49Z",
      "side": 1,
      "message": "remove unnecessary include.",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///ls\u003d",
        "filename": "su.c",
        "patchSetId": 1
      },
      "lineNbr": 357,
      "author": {
        "id": 2975
      },
      "writtenOn": "2012-03-17T21:42:12Z",
      "side": 1,
      "message": "use \"NULL\", not \"0\" (here and lots of places).",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///mw\u003d",
        "filename": "su.c",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 293
      },
      "writtenOn": "2012-03-17T20:59:19Z",
      "side": 1,
      "message": "free(data);",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///lc\u003d",
        "filename": "su.c",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 2975
      },
      "writtenOn": "2012-03-17T21:42:12Z",
      "side": 1,
      "message": "Since you\u0027re writing your own get_property() routine here, I would suggest that you pass in the length of the second argument, so that get_property() can verify it\u0027s not writing more data than it should. Relying on the caller to do the bounds checking is error prone and better done by the called method.\n\nget_property(data, cm_version, sizeof(cm_version), \"ro.cm.version\", \"\");",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///m0\u003d",
        "filename": "su.c",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 293
      },
      "writtenOn": "2012-03-17T20:59:19Z",
      "side": 1,
      "message": "free(data);",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///mk\u003d",
        "filename": "su.c",
        "patchSetId": 1
      },
      "lineNbr": 368,
      "author": {
        "id": 293
      },
      "writtenOn": "2012-03-17T20:59:19Z",
      "side": 1,
      "message": "the persist property *shouldn\u0027t* be larger than max property length, but if I was paranoid I might check anyway...",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///ms\u003d",
        "filename": "su.c",
        "patchSetId": 1
      },
      "lineNbr": 370,
      "author": {
        "id": 293
      },
      "writtenOn": "2012-03-17T20:59:19Z",
      "side": 1,
      "message": "memcpy(enabled, \"1\", 2);  /* don\u0027t forget terminating zero */",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///lk\u003d",
        "filename": "utils.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 2975
      },
      "writtenOn": "2012-03-17T21:42:12Z",
      "side": 1,
      "message": "Don\u0027t you need some kind of locking here, to prevent simultaneous reads / writes to the contents of these files?",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///k0\u003d",
        "filename": "utils.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 293
      },
      "writtenOn": "2012-03-17T22:31:41Z",
      "side": 1,
      "message": "In a normal system, these property files on /system and / are not modified. (/system is ro, etc), an the property service reads them only once at boot.\n\nI can\u0027t think of a non-malicious valid reason to change them at runtime (apart from maybe modifying them for the next boot), and if something malicious *can* modify them at runtime, it\u0027s already game over and such an agent is not likely to care about locking...",
      "parentUuid": "AAAARX///lk\u003d",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///js\u003d",
        "filename": "utils.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 2975
      },
      "writtenOn": "2012-03-17T23:31:03Z",
      "side": 1,
      "message": "This method is also used to read /data/property/persist.sys.root_access. This file is (presumably) modified by the system when the user changes the root_access setting. Although it doesn\u0027t contain arbitrary user supplied data, it *could* be problematic that the file is written by one process and read by a different process without locking. I doubt it has any security significance. \n\nSee http://review.cyanogenmod.com/#patch,sidebyside,13696,1,su.c line 366.",
      "parentUuid": "AAAARX///k0\u003d",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///jg\u003d",
        "filename": "utils.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 293
      },
      "writtenOn": "2012-03-17T23:42:37Z",
      "side": 1,
      "message": "Not an issue there.  Those are updated by writing to a temporary version then atomicly rename()\u0027ing them over top of the old file to avoid issues like that.",
      "parentUuid": "AAAARX///js\u003d",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///lg\u003d",
        "filename": "utils.c",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 2975
      },
      "writtenOn": "2012-03-17T21:42:12Z",
      "side": 1,
      "message": "fstat() will give you the length info without all the seeking.",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAARX///mo\u003d",
        "filename": "utils.c",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 293
      },
      "writtenOn": "2012-03-17T20:59:19Z",
      "side": 1,
      "message": "If I was paranoid, I might check against the max allowed property length...",
      "revId": "3aaf2cb82542e4bc93a1f2c3d0b695de0054c89a",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    }
  ]
}